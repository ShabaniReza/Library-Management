services:
  db:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: # your password
      MYSQL_DATABASE: librarymanagement
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 1m
      timeout: 1m
      retries: 5
      start_period: 1m

  web:
    build: .
    container_name: web
    ports:
      - 8000:8000
    networks:
      - mynetwork
    command: ["/app/entrypoint.sh", "python", "manage.py", "runserver", "0.0.0.0:8000"]
    depends_on:
      db:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 1m30s
      timeout: 10s
      retries: 5
      start_period: 2m

  smtp4dev:
    image: rnwood/smtp4dev:latest
    container_name: smtp4dev
    ports:
      - '5000:80'
      - '25:25'
    networks:
      - mynetwork

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - mynetwork

  worker:
    build: .
    container_name: worker
    command: celery -A libmanagement worker --loglevel=info
    networks:
      - mynetwork
    depends_on:
      web:
        condition: service_healthy
        restart: true
      db:
        condition: service_healthy
        restart: true

  pytest:
    build: .
    container_name: pytest
    command: pytest library/tests/
    networks:
      - mynetwork
    depends_on:
      web:
        condition: service_healthy
        restart: true

  locust:
    build: .
    container_name: locust
    command: locust -f locustfiles/locust_authors.py
    ports:
      - '8089:8089'
    depends_on:
      web:
        condition: service_healthy
        restart: true

networks:
  mynetwork:
    driver: bridge